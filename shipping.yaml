- name: Configuring the shipping server
  hosts: shipping
  become: yes
  tasks:
  - name: installing maven and mysql
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: installed
    loop:
    - maven
    - mysql

  - name: install PyMySQL and cryptography 
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - PyMySQL
    - cryptography

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

  - name: Download shipping code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

  - name: Extract shipping code
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: Install maven dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar files
    ansible.builtin.command:  mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: Copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: Daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: enable and start shipping
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes

  - name: import data
    tags:
    - import
    community.mysql.mysql_db:
      name: all
      login_user: root
      login_password: RoboShop@1
      login_host: mysql.arunkumarnelluri.site
      state: import
      target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql
    - /app/db/master-data.sql

  - name: restart shipping
    tags:
    - import
    ansible.builtin.service:
      state: restarted
      name: shipping